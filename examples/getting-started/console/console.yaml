apiVersion: apps/v1
kind: Deployment
metadata:
  name: firebird-console-deployment
  namespace: firebird
  labels:
    app: firebird-console
spec:
  replicas: 1
  selector:
    matchLabels:
      app: firebird-console
  template:
    metadata:
      labels:
        app: firebird-console
    spec:
      containers:
      - name: firebird-console
        image: iad.ocir.io/idrnu3akjpv5/firebird-console:latest
        command: ["fbconsole", "runserver", "0.0.0.0:8000"]
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: oci-config
          mountPath: "/root/.oci"
        - name: kube-config
          mountPath: "/root/.kube"
        - name: app-config
          mountPath: "/root/.firebird"
      volumes:
      - name: oci-config
        secret:
          secretName: firebird
          defaultMode: 0400
          items:
          - key: oci_config
            path: config
          - key: oci_api_key.pem
            path: oci_api_key.pem
      - name: kube-config
        secret:
          secretName: firebird
          items:
          - key: kube_config
            path: config
      - name: app-config
        secret:
          secretName: firebird
          items:
          - key: app_config.json
            path: config.json
---
apiVersion: v1
kind: Service
metadata:
  name: firebird-console-service
  labels:
    app: firebird-console
  namespace: firebird
  annotations:
    oci.oraclecloud.com/load-balancer-type: "lb"
    service.beta.kubernetes.io/oci-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector: 
    app: firebird-console
  ports:
  - port: 80
    targetPort: 8000
